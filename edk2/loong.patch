--- a/PKGBUILD
+++ b/PKGBUILD
@@ -200,11 +200,15 @@ build() {
   # This is used as the prefix for both gcc and objcopy
   # so it cannot be set to x86_64-linux-gnu-
   # (binutils does not provide x86_64-linux-gnu-objcopy)
-  export GCC_BIN=""
+  export GCC_BIN="x86_64-linux-gnu-"
   export GCC_AARCH64_PREFIX="aarch64-linux-gnu-"
   export GCC_ARM_PREFIX="arm-none-eabi-"
-  echo "Building base tools"
-  make -C BaseTools
+  echo "Building base tools (IA32)"
+  ARCH=IA32 make -C BaseTools
+  echo "Building base tools (X64)"
+  ARCH=X64 make -C BaseTools
+  echo "Building base tools (LOONGARCH64)"
+  ARCH=LOONGARCH64 make -C BaseTools
   # expose build tooling in PATH
   . edksetup.sh
 
@@ -314,6 +318,20 @@ build() {
       dd if=Build/ArmVirtQemu-$_arch/${_build_type}_$_build_plugin/FV/QEMU_EFI.fd of=Build/ArmVirtQemu-$_arch/${_build_type}_$_build_plugin/FV/QEMU_CODE.fd conv=notrunc
       dd if=/dev/zero of=Build/ArmVirtQemu-$_arch/${_build_type}_$_build_plugin/FV/QEMU_VARS.fd bs=1M count=64
       ;;
+      LOONGARCH64)
+      echo "Building ovmf ($_arch) with secure boot"
+      local _build_options=(
+        -p OvmfPkg/LoongArchVirt/LoongArchVirtQemu.dsc
+        -a "${_arch}"
+        "${_common_args[@]}"
+        "${_efi_args[@]}"
+        -D SECURE_BOOT_ENABLE
+      )
+      BaseTools/BinWrappers/PosixLike/build "${_build_options[@]}"
+      dd if=/dev/zero of=Build/LoongArchVirtQemu/${_build_type}_${_build_plugin}/FV/QEMU_CODE.fd bs=1M count=4
+      dd if=Build/LoongArchVirtQemu/${_build_type}_${_build_plugin}/FV/QEMU_EFI.fd of=Build/LoongArchVirtQemu/${_build_type}_${_build_plugin}/FV/QEMU_CODE.fd conv=notrunc
+      dd if=/dev/zero of=Build/LoongArchVirtQemu/${_build_type}_${_build_plugin}/FV/QEMU_VARS.fd bs=1M count=16
+      ;;
     esac
   done
 }
@@ -363,6 +381,21 @@ package_edk2-arm() {
   install -vDm 644 License.txt -t "$pkgdir/usr/share/licenses/$pkgname/"
 }
 
+package_edk2-loongarch64() {
+  local _arch=LOONGARCH64
+
+  pkgdesc="Firmware for Virtual Machines (loongarch64)"
+  url="https://github.com/tianocore/edk2/tree/master/OvmfPkg/LoongArchVirt"
+
+  cd $pkgbase
+  install -vDm 644 Build/LoongArchVirtQemu/${_build_type}_${_build_plugin}/FV/*.fd -t "$pkgdir/usr/share/$pkgbase/${_arch,,}/"
+  # install qemu descriptors in accordance with qemu:
+  # https://git.qemu.org/?p=qemu.git;a=tree;f=pc-bios/descriptors
+  install -vDm 644 ../*$pkgname*.json -t "$pkgdir/usr/share/qemu/firmware/"
+  # license
+  install -vDm 644 License.txt -t "$pkgdir/usr/share/licenses/$pkgname/"
+}
+
 package_edk2-shell() {
   local _arch
   # minimal UEFI shell, as defined in ShellPkg/Application/Shell/ShellPkg.inf
@@ -424,3 +457,11 @@ package_edk2-ovmf() {
   # docs
   install -vDm 644 {OvmfPkg/README,ReadMe.rst,Maintainers.txt} -t "$pkgdir/usr/share/doc/$pkgname/"
 }
+
+pkgname+=(edk2-loongarch64)
+_arch_list+=(LOONGARCH64)
+makedepends+=(x86_64-linux-gnu-gcc)
+
+source+=('60-edk2-loongarch64.json')
+sha512sums+=('66a0d97f0cc8b4c2184f235ace4fd372efa2cfa175178a05b40053c5e4ef887487e11813d3ff7193c4554c8841166c73dc4f930cb6ae04cd28125e51631d0a69')
+b2sums+=('e273fb4d50a98e8dcbc6e439579508d03f38e64fc69e5671e9a01a0e6591b0241cedfe07f9fe9eaedca07c96a118c1ba7bf5556e51888826874c7e0386446cc2')
